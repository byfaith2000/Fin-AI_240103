2024.1.3 수

https://github.com/rickiepark

언어는 파이썬
라이브러리는 PyTorch, TensorFlow/Keras

핸즈온 머신러닝

점프 투 파이썬

강인공지능 - 챗 GPT
약인공지능 - 특수한 분야, 인간을 대체

LLM(Large Language Model)이 챗 GPT

머신러닝 <->Heuristic (보안, 신뢰)

패턴인식 (Pattern Recogntion) : 결정을 할 때 수학적 근거(사양산업?)

머신러닝
SVM - Support Vector Macnine

Random Forest
Boost
2개 앙상블 기법

Fuzz

Yann LeCun

딥러닝이 압도적 성능...그래서 인공지능은 딥러닝

2014 AlexNet 개, 고양이
2016 GAN

딥러닝을 배우기 위한 발판이 머신러닝 

핸즈온 머신러닝이 머신러닝 + 딥러닝   , 넓고 깊다...


점푸 투 파이썬
https://wikidocs.net/book/1


컴퓨터
Storage : SSD, HDD, C, D  <-공책이다. 

RAM, 캐시 메모리, 기억장치,  <-두뇌에 해당한다. 


아스키 코드, 통일

Unicode 한글통일 -> UTF-8 (다른 건 없음)

컴파일 -> 소스파일을 기계어로 만드는 것

컴파일러에서 중요한 2가지 : CPU, OS

파이썬은 컴파일 안한다. 
인터컴파일 방식이 아니라 인터프리터 방식이다. JavaScript도 파이썬과 동일함
Basic도 인터프리터

JavaScript는 웹브라우저가 인터프리터이다. 

https://namu.wiki/w/%EC%95%84%EC%8A%A4%ED%82%A4%20%EC%BD%94%EB%93%9C

미니콘다3
https://docs.conda.io/projects/miniconda/en/latest/


24.1.4 목

https://code.visualstudio.com/ 

세팅에서 default profile로 검색 

세팅  command prompt 

pip install ipykernel

코랩
https://colab.research.google.com/


ctrl+shift+del 누르면 모든 크로미움 기반 브라우저에서 캐시 삭제하는 메뉴로 바로 넘어갑니다~


https://wikidocs.net/book/1

Floating Point System
부동 소수점

https://wikidocs.net/13





24.1.5 금

immutable : 한번 값을 만드면 변경되지 않는다.(변수?)
무적, 불변

파이썬에서 정수, 실수, 문자열, 튜플은 immutable이다. 

reference 참조    a = 1
값 자체가 아니라 값은 다른 곳에 있고 주소값을 저장한다.


https://wikidocs.net/14


자료 구조 data structure
큐 스택 -> 리스트
트리 -> 그래프
Dictionary

프로그램 시험 치는 곳
https://programmers.co.kr/


기획, 개발
기획에서...
1. UI(기능위주, 디자인)
2. 자원, 컴퓨터 제원, 추가 cloud, 내부 데이터
클래스 다이어그램

프로그램구조
thread.
흐름제어

▷



24.1.8 월
https://wikidocs.net/22





24.1.9 화

https://colab.research.google.com/drive/1IgLlE4oAAUQBi5zVLYiIfVU1A115NB83?usp=sharing


#보물이 1~8
#내부 데이터는 0~7
'''
? 123 456
123 > 456
? 23 56
23 > 56
? 3 5
3 = 5
정답은? 2
맞았습니다!
틀렸습니다 정답은 ??
'''

#데이터
'''
정답....
truth = 6
weight = True / False +1 -1 0 1
weights = [1000, 1000, 1000, 1000, 1000, 999, 1000, 100]
'''

#흐름
'''
1. 정답 생성
2. 3번 반복
 2.1 유저 입력
 2.2 판정 결과 출력
3. 정답은?
'''

-------------------
import random

truth = random.randint(0, 7)

# jewel_weight = 999 or 1001
if random.random() < 0.5:
    jewel_weight = 999
else:
    jewel_weight = 1001


weights = [1000] * 8
weights[truth] = jewel_weight
weights


---------------------

#def get_weight(index): ex) index = [0, 1, 2]
def get_weight(index):
    global weights
    total = 0
    for i in index:
        total += weights[i]
    return total
get_weight([0, 1, 2])

-----------------------------------

for _ in range(3):
    user_txt = input() #ex) user_txt = '123 456'

    #ex) left_index = [0, 1, 2]
    #    right_index = [3, 4, 5]
    lt, rt = user_txt.split()
    # ex) left_txt = '123'

    left_index = [int(txt) - 1 for txt in lt]
    right_index = [int(txt) - 1 for txt in rt]

    lw = get_weight(left_index)
    rw = get_weight(right_index)

    if lw > rw:
        print(lt, '>', rt)
    elif lw < rw:
        print(lt, '<', rt)
    else:
        print(lt, '=', rt)

answer = int(input('정답은? ')) - 1
if answer == truth:
    print('정답입니다!!')
else:
    print('틀렸습니다.. 정답은', truth + 1)















